generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Property {
  id            String   @id @default(cuid())
  title         String
  description   String?
  price         Float
  operationType String
  propertyType  String
  district      String
  address       String
  latitude      Float?
  longitude     Float?
  bedrooms      Int?
  bathrooms     Int?
  totalArea     Float?
  builtArea     Float?
  parking       Int?
  phone         String?
  email         String?
  status        String   @default("active")
  featured      Boolean  @default(false)
  images        String[]
  amenities     String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  clientId      String?
  client        Client?  @relation(fields: [clientId], references: [id])
  leads         Lead[]
  activities    Activity[]

  @@map("properties")
}

model Client {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  phone      String?
  address    String?
  dni        String?
  clientType String
  status     String   @default("active")
  notes      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  properties Property[]
  leads      Lead[]
  activities Activity[]

  @@map("clients")
}

model Lead {
  id         String   @id @default(cuid())
  name       String
  email      String
  phone      String?
  source     String
  status     String
  priority   String   @default("medium")
  budget     Float?
  notes      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  propertyId String?
  property   Property? @relation(fields: [propertyId], references: [id])
  clientId   String?
  client     Client?   @relation(fields: [clientId], references: [id])
  activities Activity[]

  @@map("leads")
}

model Activity {
  id          String   @id @default(cuid())
  type        String
  title       String
  description String?
  status      String   @default("pending")
  dueDate     DateTime?
  completedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  propertyId  String?
  property    Property? @relation(fields: [propertyId], references: [id])
  clientId    String?
  client      Client?   @relation(fields: [clientId], references: [id])
  leadId      String?
  lead        Lead?     @relation(fields: [leadId], references: [id])

  @@map("activities")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("agent")
  avatar    String?
  phone     String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
